<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Patron Display -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://open_ils_staff_client/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/circ.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/patron_display.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
	<!--#include virtual="/opac/locale/en-US/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>
<?xul-overlay href="/xul/server/patron/bill_summary_overlay.xul"?>

<window id="bill_history_win" width="700" height="550"
	onload="try{ my_init(); } catch(E) { alert(E); }"
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- BEHAVIOR -->
        <script type="text/javascript">var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};</script>
        <scripts id="openils_util_scripts"/>

	<script type="text/javascript" src="/xul/server/main/JSAN.js"/>
	<script>
	<![CDATA[

		function $(id) { return document.getElementById(id); }

		function retrieve_patron() {
			g.patron_id = g.cgi.param('patron_id');

			if (g.patron_id) {
				JSAN.use('patron.util'); 
				g.au_obj = patron.util.retrieve_fleshed_au_via_id( g.session, g.patron_id );
				
				$('patron_name').setAttribute('value', g.au_obj.family_name() + ', ' + g.au_obj.first_given_name() + ' : ' + g.au_obj.card().barcode() );
			}

		}

		function retrieve_all_mbts_for_list() {
			g.mbts_ids = g.network.simple_request('FM_MBTS_IDS_RETRIEVE_ALL',[g.session,g.patron_id]);
			if (g.mbts_ids.ilsevent) {
				switch(g.mbts_ids.ilsevent) {
					case -1: g.error.standard_network_error_alert('Please close this window and try again.'); break;
					default: g.error.standard_unexpected_error_alert('Please close this window and try again.',g.mbts_ids); break;
				}
			} else if (g.mbts_ids == null) {
				g.error.standard_unexpected_error_alert('Please close this window and try again.',null);
			} else {
				var funcs = [];
			
						function gen_func(r) {
							return function() {
								g.bill_list.append( { 'retrieve_id' : r, 'row' : {} } );
							}
						}
			
				for (var i = 0; i < g.mbts_ids.length; i++) {
					dump('i = ' + i + ' g.mbts_ids[i] = ' + g.mbts_ids[i] + '\n');
					funcs.push( gen_func(g.mbts_ids[i]) );
				}
				JSAN.use('util.exec'); var exec = new util.exec(4);
				exec.on_error = function(E) { alert(E); return true; }
				exec.chain(funcs);
			}
		}

		function retrieve_specific_mbts() {
			if (g.mbts_id) g.network.simple_request('FM_MBTS_RETRIEVE',[g.session,g.mbts_id],
				function(req) {
					try {
						g.mbts = req.getResultObject();
						if (g.mbts.ilsevent) {
							switch(g.mbts.ilsevent) {
								case -1: g.error.standard_network_error_alert('mbts_id = ' + g.mbts_id); break;
								default: g.error.standard_unexpected_error_alert('mbts_id = ' + g.mbts_id,g.mbts); break;
							}
						} else {
							$('mbts_id').value = g.mbts_id;
							$('mbts_xact_type').value = g.mbts.xact_type();
							$('mbts_xact_start').value = g.mbts.xact_start().toString().substr(0,19);
							$('mbts_xact_finish').value = g.mbts.xact_finish() ? g.mbts.xact_finish().toString().substr(0,19) : '';
							$('mbts_total_owed').value = g.mbts.total_owed() ? util.money.sanitize( g.mbts.total_owed() ) : '';
							$('mbts_total_paid').value = g.mbts.total_paid() ? util.money.sanitize( g.mbts.total_paid() ) : '';
							$('mbts_balance_owed').value = g.mbts.balance_owed() ? util.money.sanitize( g.mbts.balance_owed() ) : '';
						}
					} catch(E) {
						g.error.sdump('D_ERROR',E);
					}
				}
			);
		}

		function retrieve_circ() {
			JSAN.use('util.widgets');
			g.network.simple_request('FM_CIRC_RETRIEVE_VIA_ID', [ g.session, g.mbts_id ],
				function (req) {
					var r_circ = req.getResultObject();
					if (instanceOf(r_circ,circ)) {

						$('title_label').hidden = false;
						$('checked_out_label').hidden = false;
						$('due_label').hidden = false;
						$('checked_in_label').hidden = false;
						$('checked_out').value = r_circ.xact_start() ? r_circ.xact_start().toString().substr(0,10) : '';
						$('checked_in').value = r_circ.checkin_time() ? r_circ.checkin_time().toString().substr(0,10) : '';
						$('due').value = r_circ.due_date() ? r_circ.due_date().toString().substr(0,10) : '';

						g.network.simple_request(
							'MODS_SLIM_RECORD_RETRIEVE_VIA_COPY',
							[ r_circ.target_copy() ],
							function (rreq) {
								var r_mvr = rreq.getResultObject();
								if (instanceOf(r_mvr,mvr)) {
									util.widgets.remove_children('title');
									$('title').appendChild( document.createTextNode( r_mvr.title() ) );
								} else {
									g.network.simple_request(
										'FM_ACP_RETRIEVE',
										[ r_circ.target_copy() ],
										function (rrreq) {
											var r_acp = rrreq.getResultObject();
											if (instanceOf(r_acp,acp)) {
												util.widgets.remove_children('title');
												$('title').appendChild( document.createTextNode( r_acp.dummy_title() ) );
											}
										}
									);
								}
							}
						);

					}
				}
			);
		}

		function init_lists() {
			JSAN.use('util.list'); 
			g.bill_list = new util.list('bill_tree');

			g.bill_list.init( {
				'columns' : patron.util.mbts_columns({}),
				'map_row_to_column' : patron.util.std_map_row_to_column(' '),
				'on_select' : function(ev) {
					JSAN.use('util.functional');
					g.bill_list_selection = util.functional.map_list(
						g.bill_list.retrieve_selection(),
						function(o) { return o.getAttribute('retrieve_id'); }
					);
					$('details').disabled = g.bill_list_selection.length == 0;
					$('add').disabled = g.bill_list_selection.length == 0;
					$('summary').hidden = g.bill_list_selection.length == 0;
					g.mbts_id = g.bill_list_selection[0];
					retrieve_specific_mbts();
				},
                'retrieve_row' : function(params) {
                    var id = params.retrieve_id;
					var row = params.row;
					if (id) {
						var mbts_obj = g.network.simple_request('FM_MBTS_RETRIEVE',[g.session,id]);
						if (typeof row.my == 'undefined') row.my = {};
						row.my.mbts = mbts_obj;
					}
					if (typeof params.on_retrieve == 'function') {
						params.on_retrieve(row);
					}
                    return row;
                },
			} );

		}

		function my_init() {
			try {
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		                if (typeof JSAN == 'undefined') { throw( "The JSAN library object is missing."); }
				JSAN.errorLevel = "die"; // none, warn, or die
				JSAN.addRepository('/xul/server/');

				JSAN.use('util.error'); g.error = new util.error();
				JSAN.use('util.network'); g.network = new util.network();
				JSAN.use('util.date');
				JSAN.use('util.money');
				JSAN.use('patron.util');
				JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.init({'via':'stash'});
				g.data.temp = ''; g.data.stash('temp');

				g.error.sdump('D_TRACE','my_init() for bill_history.xul');

				g.cgi = new CGI();

				g.session = g.cgi.param('session');

				retrieve_patron();

				init_lists();

				retrieve_all_mbts_for_list();

				$('details').addEventListener(
					'command',
					handle_details,
					false
				);

				$('add').addEventListener(
					'command',
					handle_add,
					false
				);

				document.title = 'Bill History';

			} catch(E) {
				var err_msg = "!! This software has encountered an error.  Please tell your friendly " +
					"system administrator or software developer the following:\nbill_history.xul\n" + E + '\n';
				try { g.error.sdump('D_ERROR',err_msg); } catch(E) { dump(err_msg); }
				alert(err_msg);
			}
		}

		function handle_add() {
			var msg = 'Are you sure you would like to add a billing to bill' + ( g.bill_list_selection.length > 1 ? 's ' : ' ') + g.bill_list_selection + '?';
			var r = g.error.yns_alert(msg,'Bill Patron','Yes','No',null,'Check here to confirm this message');
			if (r == 0) {
				JSAN.use('util.window');
				var win = new util.window();
				var w = win.open(
					urls.XUL_PATRON_BILL_WIZARD
						+ '?session=' + window.escape(g.session)
						+ '&patron_id=' + window.escape(g.patron_id)
						+ '&xact_id=' + window.escape( g.bill_list_selection[0] ),
					'billwizard',
					'chrome,resizable,modal'
				);
				//dump('pause\n');alert('pause');
				g.bill_list.clear();
				//dump('pause\n');alert('pause');
				retrieve_all_mbts_for_list();
				//dump('pause\n');alert('pause');
				g.data.temp = 'refresh'; g.data.stash('temp');
				//dump('pause\n');alert('pause');
			}
		}

		function handle_details() {
			JSAN.use('util.window'); var w = new util.window();
			w.open(
				urls.XUL_PATRON_BILL_DETAILS 
				+ '?session=' + window.escape(g.session) 
				+ '&patron_id=' + window.escape(g.patron_id)
				+ '&mbts_id=' + window.escape( g.bill_list_selection[0] ),
				'test_billdetails',
				'modal,chrome,resizable'
			);
		}

	]]>
	</script>

	<vbox flex="1" class="my_overflow">
		<label id="patron_name" class="patronNameLarge"/>

		<groupbox orient="vertical" flex="1" id="summary" hidden="true"/>

		<splitter><grippy/></splitter>

		<groupbox orient="vertical" flex="3">
			<caption label="Bill History"/>
			<tree id="bill_tree" flex="1" enableColumnDrag="true" seltype="single"/>
			<hbox>
				<spacer flex="1"/>
				<button id="add" label="Add Billing" disabled="true"/>
				<button id="details" label="Full Details" disabled="true" accesskey="D"/>
			</hbox>
		</groupbox>

		<hbox>
			<button id="opac" label="Show in Catalog" accesskey="S" hidden="true" oncommand="alert('Not Yet Implemented');"/>
			<spacer flex="1"/>
			<button label="Close Window" oncommand="window.close()" accesskey="c"/>
		</hbox>
	</vbox>


</window>

