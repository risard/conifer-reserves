<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Brief Bib Display -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://open_ils_staff_client/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
	<!--#include virtual="/opac/locale/en-US/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="cat_copy_summary_win" 
	onload="try { my_init(); font_helper(); } catch(E) { alert(E); }"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- BEHAVIOR -->
        <script type="text/javascript">
		var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};
	</script>
        <scripts id="openils_util_scripts"/>

	<script type="text/javascript" src="/xul/server/main/JSAN.js"/>
	<script>
	<![CDATA[
		function $(id) { return document.getElementById(id); }
		function $w(id,text) { if ($(id)) util.widgets.set_text($(id),text); }

		function my_init() {
			try {
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		                if (typeof JSAN == 'undefined') { throw( "The JSAN library object is missing."); }
				JSAN.errorLevel = "die"; // none, warn, or die
				JSAN.addRepository('/xul/server/');
				JSAN.use('util.error'); g.error = new util.error();
				g.error.sdump('D_TRACE','my_init() for cat_copy_summary.xul');

				g.cgi = new CGI();
				var copy_id = g.cgi.param('copy_id');

				JSAN.use('util.network'); g.network = new util.network();
				JSAN.use('util.date'); JSAN.use('util.widgets');
				JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.stash_retrieve();
				var copy;
				if (g.data.temp_copy) {
					copy = g.data.temp_copy; g.data.temp_copy = null; g.data.stash('temp_copy');
				}

				$('caption').setAttribute('tooltiptext','Copy ID = ' + (copy_id || copy.id() ) );

				JSAN.use('circ.util');
				var columns = circ.util.columns( 
					{ 
						'barcode' : { 'hidden' : false },
						'location' : { 'hidden' : false },
						'owning_lib' : { 'hidden' : false },
						'circ_lib' : { 'hidden' : false },
						'call_number' : { 'hidden' : false },
						'status' : { 'hidden' : false },
						'alert_message' : { 'hidden' : false },
					} 
				).concat(
					{
						'id' : 'total_circs', 'label' : 'Total Circs', 'flex' : 1,
						'primary' : false, 'hidden' : false, 'persist' : 'hidden width ordinal',
						'render' : 'obj.network.simple_request("FM_CIRC_COUNT_RETRIEVE_VIA_COPY",[ my.acp.id() ]).total.count' 
					}
				);

				JSAN.use('util.list'); g.list = new util.list('item_summary_list');
				g.list.init(
					{
						'columns' : columns,
						'map_row_to_column' : circ.util.std_map_row_to_column(),
					}
				);
	
				function acp_callback(req) {
					try {
						var copy = req.getResultObject();
						if (typeof copy.ilsevent != 'undefined') throw(copy);
						g.list.append({'row':{'my':{'acp':copy}}});
						g.network.simple_request(
							'FM_ACN_RETRIEVE',
							[ copy.call_number() ],
							function (rreq) {
								try {
									$w('barcode',copy.barcode());	
									$w('ref',get_bool(copy.ref()) ? 'Yes' : 'No');	
									$w('opac_visible',get_bool(copy.opac_visible()) ? 'Yes' : 'No');	
									$w('circulate',get_bool(copy.circulate()) ? 'Yes' : 'No');	
									$w('holdable',get_bool(copy.holdable()) ? 'Yes' : 'No');	
									$w('age_protect',copy.age_protect() == null ? '<Unset>' : ( typeof copy.age_protect() == 'object' ? copy.age_protect().name() : g.data.hash.crahp[ copy.age_protect() ].name() ) );	
									$w('location',typeof copy.location() == 'object' ? copy.location().name() : g.data.lookup('acpl',copy.location()).name() );	
									$w('create_date',util.date.formatted_date(copy.create_date(),'%F'));
									$w('edit_date',util.date.formatted_date(copy.edit_date(),'%F'));
									$w('status',typeof copy.status() == 'object' ? copy.status().name() : g.data.hash.ccs[ copy.status() ].name() );	
								} catch(E) {
									g.error.standard_unexpected_error_alert('rendering copy',E);
								}
								try {
									var cn = rreq.getResultObject();
									if (typeof cn.ilsevent != 'undefined') {
										switch(cn.ilsevent) {
											case 1508 /* ASSET_CALL_NUMBER_NOT_FOUND */ :
												$w('callnumber','Not Cataloged');	
											break;
											default:
												throw(cn);
											break;
										}
									} else {
										$w('callnumber',cn.label());	
									}
								} catch(E) {
									g.error.standard_unexpected_error_alert('retrieving volume',E);
								}
							}
						);
					} catch(E) {
						g.error.standard_unexpected_error_alert('retrieving copy',E);
					}
				}

				if (copy_id) {
					g.network.simple_request( 'FM_ACP_RETRIEVE', [ copy_id ], acp_callback);
				} else {
					acp_callback( { 'getResultObject' : function() { return copy; } } );
					copy_id = copy.id();
				}

				g.network.simple_request('FM_CIRC_COUNT_RETRIEVE_VIA_COPY',[ copy_id ],function(req) {
					try {
						var robj = req.getResultObject();
						if (typeof robj.ilsevent != 'undefined') throw(robj);
						$w('total_circs',robj.total.count);
					} catch(E) {
						g.error.standard_unexpected_error_alert('retrieving circ total',E);
					}
				});

				toggle_deck(); toggle_deck(); /* quick hack */

			} catch(E) {
				try { g.error.standard_unexpected_error_alert('copy_summary.xul',E); } catch(F) { alert(E + '\n' + F); }
			}
		}

		function toggle_deck() {
			try {
				if ($('item_deck').selectedIndex == 0) {
					$('item_deck').selectedIndex = 1; /* change to grid */
					$('save_columns').hidden = true;
					$('sel_clip').hidden = true;
				} else {
					$('item_deck').selectedIndex = 0; /* change to tree */
					$('save_columns').hidden = false;
					$('sel_clip').hidden = false;
				}
			} catch(E) {
			}
		}
	]]>
	</script>

	<groupbox id="groupbox" flex="1" style="overflow: none; min-height: 80;">
		<caption label="Item Summary" id="caption"/>
		<deck id="item_deck" persist="selectedIndex">
			<tree id="item_summary_list" enableColumnDrag="true" flex="1"/>
			<grid>
				<columns>
					<column/>
					<column/>
					<column/>
					<column/>
					<column/>
					<column/>
					<column/>
					<column/>
				</columns>
				<rows>
					<row>
						<label style="font-weight: bold" value="Barcode:"/>
						<label id="barcode" style="color: blue; text-decoration: underline; -moz-user-focus: normal;" onclick="copy_to_clipboard(event);"/>
						<label style="font-weight: bold" value="Location:"/>
						<label id="location"/>
						<label style="font-weight: bold" value="Call Number:"/>
						<label id="callnumber"/>
						<label style="font-weight: bold" value="Status:"/>
						<label id="status"/>
					</row>
					<row>
						<label style="font-weight: bold" value="Circulate:"/>
						<label id="circulate"/>
						<label style="font-weight: bold" value="Reference:"/>
						<label id="ref"/>
						<label style="font-weight: bold" value="Holdable:"/>
						<label id="holdable"/>
						<label style="font-weight: bold" value="Opac Visible:"/>
						<label id="opac_visible"/>
					</row>
					<row>
						<label style="font-weight: bold" value="Created:"/>
						<label id="create_date"/>
						<label style="font-weight: bold" value="Edited:"/>
						<label id="edit_date"/>
						<label style="font-weight: bold" value="Age Protect:"/>
						<label id="age_protect"/>
						<label style="font-weight: bold" value="Total Circs:"/>
						<label id="total_circs"/>
					</row>
				</rows>
			</grid>
		</deck>
		<hbox>
			<label value="Alternate View" style="text-decoration: underline; color: blue" onclick="toggle_deck()"/>
			<label id="save_columns" value="Save Columns" style="text-decoration: underline; color: blue" onclick="try { g.list.save_columns(); } catch(E) { alert(E); }"/>
			<label id="sel_clip" value="Copy to Clipboard" style="text-decoration: underline; color: blue" onclick="try { g.list.node.view.selection.selectAll(); g.list.clipboard(); } catch(E) { alert(E); }"/>
		</hbox>
	</groupbox>

</window>

