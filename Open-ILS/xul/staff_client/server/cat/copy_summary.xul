<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Brief Bib Display -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://open_ils_staff_client/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
	<!--#include virtual="/opac/locale/en-US/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="cat_copy_summary_win" 
	onload="try { my_init(); } catch(E) { alert(E); }"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- BEHAVIOR -->
        <script type="text/javascript">
		var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};
	</script>
        <scripts id="openils_util_scripts"/>

	<script type="text/javascript" src="/xul/server/main/JSAN.js"/>
	<script>
	<![CDATA[
		function $(id) { return document.getElementById(id); }
		function $w(id,text) { if ($(id)) util.widgets.set_text($(id),text); }

		function my_init() {
			try {
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		                if (typeof JSAN == 'undefined') { throw( "The JSAN library object is missing."); }
				JSAN.errorLevel = "die"; // none, warn, or die
				JSAN.addRepository('/xul/server/');
				JSAN.use('util.error'); g.error = new util.error();
				g.error.sdump('D_TRACE','my_init() for cat_copy_summary.xul');

				g.cgi = new CGI();
				var copy_id = g.cgi.param('copy_id');

				JSAN.use('util.network'); g.network = new util.network();
				JSAN.use('util.date'); JSAN.use('util.widgets');
				JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.stash_retrieve();
				var copy;
				if (g.data.temp_copy) {
					copy = g.data.temp_copy; g.data.temp_copy = null; g.data.stash('temp_copy');
				}

				$('caption').setAttribute('tooltiptext','Copy ID = ' + (copy_id || copy.id() ) );

				JSAN.use('circ.util');
				var columns = circ.util.columns( 
					{ 
						'barcode' : { 'hidden' : false },
						'location' : { 'hidden' : false },
						'owning_lib' : { 'hidden' : false },
						'circ_lib' : { 'hidden' : false },
						'call_number' : { 'hidden' : false },
						'status' : { 'hidden' : false },
						'alert_message' : { 'hidden' : false },
					} 
				).concat(
					{
						'id' : 'total_circs', 'label' : 'Total Circs', 'flex' : 1,
						'primary' : false, 'hidden' : false, 'persist' : 'hidden width ordinal',
						'render' : 'obj.network.simple_request("FM_CIRC_COUNT_RETRIEVE_VIA_COPY",[ my.acp.id() ]).total.count' 
					}
				);

				JSAN.use('util.list'); g.list = new util.list('item_summary_list');
				g.list.init(
					{
						'columns' : columns,
						'map_row_to_column' : circ.util.std_map_row_to_column(),
					}
				);
	
				function acp_callback(req) {
					try {
						var copy = req.getResultObject();
						if (typeof copy.ilsevent != 'undefined') throw(copy);
						g.list.append({'row':{'my':{'acp':copy}}});
					} catch(E) {
						g.error.standard_unexpected_error_alert('retrieving copy',E);
					}
				}

				if (copy_id) {
					g.network.simple_request( 'FM_ACP_RETRIEVE', [ copy_id ], acp_callback);
				} else {
					acp_callback( { 'getResultObject' : function() { return copy; } } );
				}

			} catch(E) {
				var err_msg = "!! This software has encountered an error.  Please tell your friendly " +
					"system administrator or software developer the following:\ncat/copy_summary.xul\n" + E + '\n';
				try { g.error.sdump('D_ERROR',err_msg); } catch(E) { dump(err_msg); }
				alert(err_msg);
			}
		}

	]]>
	</script>

	<groupbox id="groupbox" flex="1" style="overflow: none; min-height: 80;">
		<caption label="Item Summary" id="caption"/>
		<tree id="item_summary_list" enableColumnDrag="true" flex="1"/>
	</groupbox>

</window>

