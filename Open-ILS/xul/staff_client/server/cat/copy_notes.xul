<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Patron Display -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://open_ils_staff_client/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/patron_display.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
	<!--#include virtual="/opac/locale/en-US/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="copy_notes_win" width="700" height="550"
	onload="try{ my_init(); font_helper(); } catch(E) { alert(E); }"
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- BEHAVIOR -->
        <script type="text/javascript">var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};</script>
        <scripts id="openils_util_scripts"/>

	<script type="text/javascript" src="/xul/server/main/JSAN.js"/>
	<script>
	<![CDATA[

		function $(id) { return document.getElementById(id); }

		function my_init() {
			try {
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		                if (typeof JSAN == 'undefined') { throw( "The JSAN library object is missing."); }
				JSAN.errorLevel = "die"; // none, warn, or die
				JSAN.addRepository('/xul/server/');

				JSAN.use('util.error'); g.error = new util.error();
				JSAN.use('util.network'); g.network = new util.network();
				JSAN.use('util.date'); JSAN.use('util.money'); JSAN.use('patron.util');
				JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.init({'via':'stash'});

				g.error.sdump('D_TRACE','my_init() for copy_notes.xul');

				g.cgi = new CGI();
				g.copy_id = g.cgi.param('copy_id');

				refresh();

			} catch(E) {
				var err_msg = "!! This software has encountered an error.  Please tell your friendly " +
					"system administrator or software developer the following:\ncopy_notes.xul\n" + js2JSON(E) + '\n';
				try { g.error.sdump('D_ERROR',err_msg); } catch(E) { dump(err_msg); }
				alert(err_msg);
			}
		}

		function refresh() {
			retrieve_notes(); render_notes();
		}

		function retrieve_notes() {
			g.notes = g.network.simple_request('FM_ACPN_RETRIEVE_ALL',[ { 'authtoken' : ses(), 'itemid' : g.copy_id } ]).reverse();
		}

		function apply(node,field,value) {
			util.widgets.apply(
				node,'name',field,
				function(n) {
					switch(n.nodeName) {
						case 'description' : n.appendChild( document.createTextNode( value ) ); break;
						case 'label' : n.value = value; break;
						default : n.value = value; break;
					}
				}
			);
		}

		function render_notes() {
			JSAN.use('util.widgets'); util.widgets.remove_children('notes_panel');
			var np = $('notes_panel');
				var hbox = document.createElement('hbox'); np.appendChild(hbox);
					var btn = document.createElement('button'); hbox.appendChild(btn);
						btn.setAttribute('label','Add New Note');
						btn.setAttribute('accesskey','A');
						btn.setAttribute('oncommand','new_note()');

			for (var i = 0; i < g.notes.length; i++) {

				/* template */
				var node = $('note_template').cloneNode(true); np.appendChild(node); node.hidden = false;
				apply(node,'create_date',g.notes[i].create_date().toString().substr(0,10));
				util.widgets.apply(node,'name','create_date',
					function(n){n.setAttribute("tooltiptext","Note ID: " + g.notes[i].id() + " Creator ID: " + g.notes[i].creator());}
				);
				apply(node,'title',g.notes[i].title());
				apply(node,'pub',get_bool( g.notes[i].pub() ) ? "Public" : "Private");
				apply(node,'value',g.notes[i].value());
				apply(node,'id',g.notes[i].id());
				apply(node,'creator',g.notes[i].creator());

				/* button bar */
				var hb = document.createElement('hbox'); np.appendChild(hb);
					var spacer = document.createElement('spacer'); hb.appendChild(spacer); spacer.flex = 1;
					var btn1 = document.createElement('button'); hb.appendChild(btn1);
						btn1.setAttribute('label','Delete This Note');
						btn1.setAttribute('image',"/xul/server/skin/media/images/up_arrow.gif");

						btn1.addEventListener(
							'command',
							function(id){ return function() { 
								var r = g.error.yns_alert('Delete the note titled "' + g.notes[id].title() + '" created on ' + g.notes[id].create_date().toString().substr(0,10) + '?','Delete Note','Yes','No',null,'Check here to confirm this action'); 
								if (r == 0) {
									g.network.simple_request('FM_ACPN_DELETE',[ses(),g.notes[id].id()]);
									setTimeout(function(){ alert('Note deleted.'); refresh();},0);
								}
							} }(i),
							false
						);
			}

		}
		
		function new_note() {
			try {
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect UniversalBrowserWrite");
				var xml = '<groupbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" flex="1"><caption label="New Note"/><grid flex="1"><columns><column/><column flex="1"/></columns><rows><row><label value="Public?"/><checkbox id="pub" name="fancy_data" checked="false"/></row><row><label value="Title"/><textbox id="title" name="fancy_data"/></row><row><label value="Note"/><textbox multiline="true" id="note" name="fancy_data"/></row><row><spacer/><hbox><button label="Cancel" name="fancy_cancel" accesskey="C"/><button label="Add Note" accesskey="A" name="fancy_submit"/></hbox></row></rows></grid></groupbox>';
				g.data.init({'via':'stash'});
				g.data.temp_note_xml = xml; g.data.stash('temp_note_xml');
				window.open(
					urls.XUL_FANCY_PROMPT
					+ '?xml_in_stash=temp_note_xml'
					+ '&focus=' + window.escape('title')
					+ '&title=' + window.escape('Add Note'),
					'fancy_prompt', 'chrome,resizable,modal,width=700,height=500'
				);
				g.data.init({'via':'stash'});
				if (g.data.fancy_prompt_data != '') {
					//alert(js2JSON(g.data.fancy_prompt_data));
					var note = new acpn();
					note.isnew(1);
					note.title( g.data.fancy_prompt_data.title );
					note.value( g.data.fancy_prompt_data.note );
					note.pub( get_bool( g.data.fancy_prompt_data.pub ) ? get_db_true() : get_db_false() );
					note.owning_copy( g.copy_id );
					var r = g.network.simple_request('FM_ACPN_CREATE',[ ses(), note ]);
					if (typeof r.ilsevent != 'undefined') throw(r);
					setTimeout(function(){alert('Note added.');refresh();},0);
				}
			} catch(E) {
				g.error.standard_unexpected_error_alert('The note was not likely created.',E);
			}
		}

	]]>
	</script>

	<stack hidden="true" id="note_template" flex="1">
		<groupbox flex="1" style="background-color: black;"/>
		<groupbox flex="1" style="background-color: #FFDE00; -moz-border-radius-topright: 35px;" >
			<hbox>
				<description name="title" style="font-weight: bold"/>
				<spacer flex="1"/>
				<description name="create_date" style="font-weight: bold"/>
				<description name="pub" style="font-weight: bold"/>
			</hbox>
			<description name="value"/>
		</groupbox>
	</stack>

	<vbox flex="1" class="my_overflow" id="notes_panel">
	</vbox>


</window>

