<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Example Template for remote xul -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/patron_display.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
	<!--#include virtual="/opac/locale/en-US/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="fancy_prompt_win" 
	onload="try { my_init(); font_helper(); } catch(E) { alert(E); }"
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- BEHAVIOR -->
        <script type="text/javascript">
		var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};
	</script>
        <scripts id="openils_util_scripts"/>

	<script type="text/javascript" src="/xul/server/main/JSAN.js"/>
	<script>
	<![CDATA[
		function my_init() {
			try {
				netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		                if (typeof JSAN == 'undefined') { throw( "The JSAN library object is missing."); }
				JSAN.errorLevel = "die"; // none, warn, or die
				JSAN.addRepository('/xul/server/');
				JSAN.use('util.error'); g.error = new util.error();
				g.error.sdump('D_TRACE','my_init() for fancy_prompt.xul');

				JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.init({'via':'stash'});
				g.data.fancy_prompt_data = ''; g.data.stash('fancy_prompt_data');
				g.data.fancy_prompt_data = {};

				g.cgi = new CGI();

				var top_xml = g.cgi.param('top_xml') || g.data[ g.cgi.param('top_xml_in_stash') ];
				if (top_xml) {
					var parser = new DOMParser();
					var doc = parser.parseFromString( top_xml, 'text/xml' );
					var node = doc.documentElement;
					if (node) document.getElementById('fancy_prompt_topbar').appendChild(node);
				}

				var my_xml = g.cgi.param('xml') || g.data[ g.cgi.param('xml_in_stash') ];
				if (my_xml) {
					var parser = new DOMParser();
					var doc = parser.parseFromString( my_xml, 'text/xml' );
					var node = doc.documentElement;
					if (node) document.getElementById('fancy_prompt_main').appendChild(node);
				}

				var bot_xml = g.cgi.param('bot_xml') || g.data[ g.cgi.param('bottom_xml_in_stash') ];
				if (bot_xml) {
					var parser = new DOMParser();
					var doc = parser.parseFromString( bot_xml, 'text/xml' );
					var node = doc.documentElement;
					if (node) document.getElementById('fancy_prompt_bottombar').appendChild(node);
				}

				var nl = document.getElementsByAttribute('name','fancy_submit');
				for (var i = 0; i < nl.length; i++) {
					nl[i].addEventListener('command',fancy_save,false);
				}

				var nl = document.getElementsByAttribute('name','fancy_cancel');
				for (var i = 0; i < nl.length; i++) {
					nl[i].addEventListener('command',function(ev) { window.close(); },false);
				}

				if (g.cgi.param('title')) {
					try { window.title = g.cgi.param('title'); } catch(E) {}
					try { document.title = g.cgi.param('title'); } catch(E) {}
				}

				if (g.cgi.param('focus')) document.getElementById(g.cgi.param('focus')).focus();

			} catch(E) {
				var err_msg = "!! This software has encountered an error.  Please tell your friendly " +
					"system administrator or software developer the following:\nfancy_prompt.xul\n" + E + '\n';
				try { g.error.sdump('D_ERROR',err_msg); } catch(E) { dump(err_msg); }
				alert(err_msg);
			}
		}

		function fancy_save(ev) {
			if (ev.target.id) g.data.fancy_prompt_data[ ev.target.id ] = ev.target.value || ev.target.getAttribute('value');
			g.data.fancy_prompt_data[ 'fancy_submit' ] = ev.target.value || ev.target.getAttribute('value');
			var nl = document.getElementsByAttribute('name','fancy_data');
			for (var i = 0; i < nl.length; i++) {
				g.data.fancy_prompt_data[ nl[i].id ] = nl[i].nodeName == 'checkbox' ? nl[i].checked : nl[i].value;
			}
			g.data.stash('fancy_prompt_data');
			window.close();
		}
	]]>
	</script>

	<vbox id="fancy_prompt_topbar"/>
	<vbox id="fancy_prompt_main" flex="1" style="overflow: auto"/>
	<vbox id="fancy_prompt_bottombar"/>

</window>

