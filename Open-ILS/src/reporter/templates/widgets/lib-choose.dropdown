[%

PROCESS inputs;

root = 'SELECT * FROM ' _ table.findvalue('tablename') _ ' WHERE parent_ou IS NULL ORDER BY name;';
q = 'SELECT * FROM ' _ table.findvalue('tablename') _ ' WHERE parent_ou = ? ORDER BY name;';

org_unit_type = DBI.tie('actor.org_unit_type', 'id')

%]

<script language="javascript">
	filters["[% input_prefix %]"] = "[% table_label _ ' -- ' _ field.findvalue('label') %]";

	var hier_[% table_alias %] = [];

	function change_hier_[% table_alias %] ( sel ) {
		for (var i in hier_[% table_alias %]) {
			if (hier_[% table_alias %][i] == sel.options[sel.selectedIndex].id) {
				return true;
			}
		}
		sel.selectedIndex = null;
		return false;
	}
</script>

[%

WRAPPER select id=input_prefix name=input_prefix onchange='change_hier_' _ table_alias _ '(this);';
	depth = 0;
	INCLUDE option value='' content='Select One';
	INCLUDE option value='' content='----------';
	FOR f = DBI.query(root);
		INCLUDE option value=f.id content=f.name;
		INCLUDE next_level parent_ou = f.id depth;
	END;
END;


BLOCK next_level;
	depth = depth + 1;
	x = depth;
	s = DBI.prepare(q);
	FOR f = s.execute(parent_ou);
		ou_t = f.ou_type;

		logme(["can_have_vols for ou_t", ,org_unit_type.$ou_t.can_have_vols]);

		IF org_unit_type.$ou_t.can_have_vols == 1;
			%]
			<script language="javascript">
				hier_[% table_alias %].push("dr_[% f.id %]");
			</script>
			[%
		END;

		x = depth;
		val = '';
		WHILE x > 0;
			val = val _ '&nbsp;&nbsp;';
			x = x - 1;
		END;

		selected = '';
		IF current_value == f.id;
			selected = 'selected';
		END;

		INCLUDE option value=f.id content=f.name content=val _ f.name id='dr_' _ f.id;
		INCLUDE next_level parent_ou = f.id;
	END;
END;

%]
